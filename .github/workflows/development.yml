name: Development CI

on:
  push:
    branches:
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push client image
        run: |
          docker build -t faizal67/veditor-client:latest ./Client
          docker push faizal67/veditor-client:latest

      - name: Build and push server image
        run: |
          docker build -t faizal67/veditor-server:latest ./Server
          docker push faizal67/veditor-server:latest
  
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Install eksctl
        run: |
          sudo wget -O /usr/local/bin/eksctl "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz"
          sudo chmod +x /usr/local/bin/eksctl
          eksctl version  # Verify installation

      - name: Configure AWS credentials for eksctl
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region ap-south-1

      - name: Create EKS Cluster
        run: |
          eksctl create cluster \
            --name=my-cluster \
            --region=ap-south-1 \
            --node-type=t3.micro \
            --nodes=2 \
            --nodes-min=1 \
            --nodes-max=2 \
            --managed

      - name: Verify EKS Cluster
        run: eksctl get cluster --name=my-cluster --region=ap-south-1

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/client-deployment.yaml
          kubectl apply -f k8s/client-service.yaml
          kubectl apply -f k8s/server-deployment.yaml
          kubectl apply -f k8s/server-service.yaml
